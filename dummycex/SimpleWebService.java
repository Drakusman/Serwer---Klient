
package dummycex;

import dummycex.*;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimpleWebService", targetNamespace = "http://Server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimpleWebService {


    /**
     * 
     * @param s
     * @return
     *     returns java.util.List<dummycex.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllMessagesWithContentContainingString", targetNamespace = "http://Server/", className = "dummycex.GetAllMessagesWithContentContainingString")
    @ResponseWrapper(localName = "getAllMessagesWithContentContainingStringResponse", targetNamespace = "http://Server/", className = "dummycex.GetAllMessagesWithContentContainingStringResponse")
    @Action(input = "http://Server/SimpleWebService/getAllMessagesWithContentContainingStringRequest", output = "http://Server/SimpleWebService/getAllMessagesWithContentContainingStringResponse")
    public List<Message> getAllMessagesWithContentContainingString(
        @WebParam(name = "s", targetNamespace = "")
        String s);

    /**
     * 
     * @param v
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addValue", targetNamespace = "http://Server/", className = "dummycex.AddValue")
    @ResponseWrapper(localName = "addValueResponse", targetNamespace = "http://Server/", className = "dummycex.AddValueResponse")
    @Action(input = "http://Server/SimpleWebService/addValueRequest", output = "http://Server/SimpleWebService/addValueResponse")
    public Boolean addValue(
        @WebParam(name = "v", targetNamespace = "")
        int v);

    /**
     * 
     * @param m
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessageAuthorLength", targetNamespace = "http://Server/", className = "dummycex.GetMessageAuthorLength")
    @ResponseWrapper(localName = "getMessageAuthorLengthResponse", targetNamespace = "http://Server/", className = "dummycex.GetMessageAuthorLengthResponse")
    @Action(input = "http://Server/SimpleWebService/getMessageAuthorLengthRequest", output = "http://Server/SimpleWebService/getMessageAuthorLengthResponse")
    public Integer getMessageAuthorLength(
        @WebParam(name = "m", targetNamespace = "")
        Message m);

    /**
     * 
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isConnected", targetNamespace = "http://Server/", className = "dummycex.IsConnected")
    @ResponseWrapper(localName = "isConnectedResponse", targetNamespace = "http://Server/", className = "dummycex.IsConnectedResponse")
    @Action(input = "http://Server/SimpleWebService/isConnectedRequest", output = "http://Server/SimpleWebService/isConnectedResponse")
    public Boolean isConnected();

    /**
     * 
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "GetMaximumValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetMaximumValue", targetNamespace = "http://Server/", className = "dummycex.GetMaximumValue")
    @ResponseWrapper(localName = "GetMaximumValueResponse", targetNamespace = "http://Server/", className = "dummycex.GetMaximumValueResponse")
    @Action(input = "http://Server/SimpleWebService/GetMaximumValueRequest", output = "http://Server/SimpleWebService/GetMaximumValueResponse")
    public Double getMaximumValue();

    /**
     * 
     * @param m
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "AddMessage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AddMessage", targetNamespace = "http://Server/", className = "dummycex.AddMessage")
    @ResponseWrapper(localName = "AddMessageResponse", targetNamespace = "http://Server/", className = "dummycex.AddMessageResponse")
    @Action(input = "http://Server/SimpleWebService/AddMessageRequest", output = "http://Server/SimpleWebService/AddMessageResponse")
    public Boolean addMessage(
        @WebParam(name = "m", targetNamespace = "")
        Message m);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Server/", className = "dummycex.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Server/", className = "dummycex.HelloResponse")
    @Action(input = "http://Server/SimpleWebService/helloRequest", output = "http://Server/SimpleWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param x1
     * @param x2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Simple_Method")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Simple_Method", targetNamespace = "http://Server/", className = "dummycex.SimpleMethod")
    @ResponseWrapper(localName = "Simple_MethodResponse", targetNamespace = "http://Server/", className = "dummycex.SimpleMethodResponse")
    @Action(input = "http://Server/SimpleWebService/Simple_MethodRequest", output = "http://Server/SimpleWebService/Simple_MethodResponse")
    public Double simpleMethod(
        @WebParam(name = "x1", targetNamespace = "")
        Double x1,
        @WebParam(name = "x2", targetNamespace = "")
        Double x2);

    /**
     * 
     * @param x1
     * @param x2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "GetProductOfWithException")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetProductOfWithException", targetNamespace = "http://Server/", className = "dummycex.GetProductOfWithException")
    @ResponseWrapper(localName = "GetProductOfWithExceptionResponse", targetNamespace = "http://Server/", className = "dummycex.GetProductOfWithExceptionResponse")
    @Action(input = "http://Server/SimpleWebService/GetProductOfWithExceptionRequest", output = "http://Server/SimpleWebService/GetProductOfWithExceptionResponse")
    public Double getProductOfWithException(
        @WebParam(name = "x1", targetNamespace = "")
        Double x1,
        @WebParam(name = "x2", targetNamespace = "")
        Double x2);

}
